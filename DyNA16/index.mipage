:Class index : bbbPage

    :Field Public Order

    SubTotal←0
    fmtCost←{'$',1↓2 #.Strings.fmtNum ⍵}

    ∇ Compose;data
      :Access Public
     
⍝ first lay out the order form and cart panels
      Order←⍬
      data←#.BusinessLogic.Menu
     
      orderForm←New _.Form
     
      (orderControls←'orderControls'New _.StackPanel).Horizontal←1
      orderControls.style←'display:none'
     
      cartPanel←New _.StackPanel orderControls('orderSummary'New _.div)('orderTotal'New _.div)
      (orderPage←'orderPage'Add _.StackPanel orderForm cartPanel).Horizontal←1
      orderPage.Items.id←'orderPanel' 'cartPanel'
     
⍝ then within the order form, lay out the divisions for burgers, sides, and drinks
      orderItems←'orderItems'orderForm.Add _.StackPanel
     
⍝ burgers have sub panels for size, bun type, and toppings
      burgerPanel←'burgerFieldSet'orderItems.Add _.Fieldset'Burgers'
     
      sizePanel←'sizeFieldSet' '.subFieldSet'burgerPanel.Add _.Fieldset'Size'
      sizePanel.Add 3 inputTable'size'∘('radio'makeItem)¨data.burgers.size
     
      bunPanel←'.subFieldSet'burgerPanel.Add _.Fieldset'Bun Type'
      bunPanel.Add 2 inputTable'bun'∘('radio'makeItem)¨data.burgers.bun
     
      toppingsPanel←'.subFieldSet'burgerPanel.Add _.Fieldset'Toppings'
      toppingsPanel.Add 3 inputTable'toppings'∘('checkbox'makeItem)¨data.burgers.toppings
     
⍝ add the panel for sides
      sidesPanel←orderItems.Add _.Fieldset'Sides'
      sidesPanel.Add 2 inputTable'sides'∘('checkbox'makeItem)¨data.sides
     
⍝ add the panel for drinks
      drinksPanel←orderItems.Add _.Fieldset'Drinks'
      drinksPanel.Add 3 inputTable'drinks'∘('checkbox'makeItem)¨data.drinks
     
⍝ add a div with the subtotal and buttons to add the subtotal to the order or reset the panel
     
      (subOrder←'subOrder'orderItems.Add _.StackPanel).Horizontal←1
      'subTotalPanel'subOrder.Add'Subtotal: '('subtotal'New(_.span(fmtCost SubTotal)))
      ('buttons'subOrder.Add _.div).Add(('add' 'disabled')'reset'){⍺ New _.Button ⍵}¨'Add to order' 'Reset'
     
⍝ add order buttons and total display area
      orderControls.Add(('order' 'disabled')'cancel'){⍺ New _.Button ⍵}¨'Place Order' 'Cancel Order'
     
      thankYou←'thankYouPage'Add _.div''
      thankYou.style←'display:none;' ⍝ Invisible until further notice
      thxtbl←1 1⍴⊂'thx'New _.span'Thank you for your order!'
      thxtbl⍪←'yournum'New _.span('Your order number is '('orderNumber'New _.span))
      thxtbl⍪←'again'New _.Button'Continue'
      'thxtbl'thankYou.Add _.Table thxtbl
     
     
      Add _.Handler'input,button' 'click select' 'checkPage'
    ∇

    ∇ r←checkPage;size;bun;toppings;subOrder;pageData
      ⍝ Called on the click or select of any input or button
     
      :Access Public
      r←''
     
      :If 0∊⍴pageData←{0::'' ⋄ ⍵{⍺⍎⍵}¨⍵.⎕NL-2}_PageData
          subOrder←0 3⍴'' '' 0
      :Else
          subOrder←#.BusinessLogic.FoodItems{(⍺⍪'' '' 0)[⍺[;1]⍳⍵;]}⊃,/eis¨pageData
      :EndIf
     
      :Select _what
      :Case 'add'
          Order,←⊂subOrder
          orderTable←#.BusinessLogic.FormatOrder Order
          r,←'#orderSummary'Replace('orderTable'New _.Table(('Qty' 'Item' 'Cost'⍪{⍵[;1 2],fmtCost¨⍵[;3]}orderTable)'' 1))
          r,←Execute'input'_JSS.RemoveAttr'checked'
          r,←'#orderTotal'Replace'Order Total: ',fmtCost+/orderTable[;3]
          r,←Execute'#orderControls'#._JSS.Show''
          r,←Execute'#order'_JSS.Prop'disabled'_false
          r,←Execute'#add'_JSS.Prop'disabled'_true
          SubTotal←0
     
      :Case 'reset'
          r,←Execute'input'_JSS.RemoveAttr'checked'
          SubTotal←0
     
      :Case 'order'
          r,←'#orderNumber'Replace #.BusinessLogic.PlaceOrder Order
          r,←Execute'#thankYouPage,#orderPage'_JSS.Toggle''
     
      :CaseList 'cancel' 'again'
          r,←Execute'location.reload(true)'
     
      :Else
          size bun toppings←Get'size bun toppings'
          :If 0∊⍴size  ⍝ if no burger size has been selected
          :AndIf ∨/~0∘∊∘⍴¨bun toppings  ⍝ and a bun or toppings have been
              r,←Execute('#',(size←⊃#.BusinessLogic.Menu.burgers.size).id)#._JSS.Prop'checked'_true ⍝ select the first size
              subOrder⍪←size.(id name cost)
          :EndIf
          :If 0∊⍴bun  ⍝ if no burger size has been selected
          :AndIf ∨/~0∘∊∘⍴¨size toppings  ⍝ and a bun or toppings have been
              r,←Execute('#',(bun←⊃#.BusinessLogic.Menu.burgers.bun).id)#._JSS.Prop'checked'_true ⍝ select the first bun
              subOrder⍪←bun.(id name cost)
          :EndIf
          SubTotal←+/subOrder[;3]
          r,←Execute'#add'_JSS.Prop'disabled'_false
      :EndSelect
      r,←'#subtotal'Replace fmtCost SubTotal
    ∇

    ∇ r←inputName(inputType makeItem)item;caption
    ⍝ Create a menu item (with optional cost) as a checkbox or radiobutton
     
      caption←item.name
      :If item.cost≠0 ⍝ Add cost if relevant
          caption,←' (',((item.cost<0)/'&minus;'),('-'~⍨fmtCost item.cost),')'
      :EndIf
     
      r←(item.id('name'inputName))New _.Input inputType item.id caption'right'
      r←'.itemthing'New _.div r
    ∇

    ∇ r←columns inputTable inputs
    ⍝ Format a list of inputs into a matrix, padding with empty cells
     
      r←New _.Table(((⌈(⍴inputs)÷columns),columns)⍴inputs,columns⍴⊂'')
    ∇

:EndClass
